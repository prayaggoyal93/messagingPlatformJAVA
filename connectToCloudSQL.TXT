// CONNECTING MICROSERVICE TO CLOUD SQL

//CLONE
git clone --single-branch --branch cloud-learning https://github.com/saturnism/spring-cloud-gcp-guestbook.git

//COPY FOLDERS TO HOME
cp -a ~/spring-cloud-gcp-guestbook/1-bootstrap/guestbook-service ~/guestbook-service
cp -a ~/spring-cloud-gcp-guestbook/1-bootstrap/guestbook-frontend ~/guestbook-frontend

//ENABLE CLOUD SQL ADMINTRATION API
gcloud services enable sqladmin.googleapis.com

//CONFIRM API IS ENABLED
gcloud services list | grep sqladmin

//LIST CLOUD SQL INSTANCES
gcloud sql instances list

//CREATE NEW INSTANCE
gcloud sql instances create guestbook --region=us-central1

//CREATE DATABASE
gcloud sql databases create messages --instance guestbook

//CONNECT TO DATABASE
gcloud sql connect guestbook

show databases;
connect to atabase_name;

//CONNECTING APPLICATION TO CLOUD SQL
//UPDATE POM.XML
	<dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-gcp-starter-sql-mysql</artifactId>
    </dependency>

//TO FIND INSTANCE CONNECTION NAME:
gcloud sql instances describe guestbook --format='value(connectionName)'

//CREATE NEW FILE IN MAIN RESOURCES AND ADD FOLLOWINF PROPERTIES
spring.cloud.gcp.sql.enabled=true
spring.cloud.gcp.sql.database-name=messages
spring.cloud.gcp.sql.instance-connection-name=YOUR_INSTANCE_CONNECTION_NAME
spring.datasource.hikari.maximum-pool-size=5


//NOW RUNNING THE BACKEND SERVICE
cd ~/guestbook-service
./mvnw test //TO TEST BUILD AND SEE ERRORS
./mvnw spring-boot:run \
  -Dspring-boot.run.jvmArguments="-Dspring.profiles.active=cloud"


//TESTING
curl -XPOST -H "content-type: application/json" \
  -d '{"name": "Ray", "message": "Hello CloudSQL"}' \
  http://localhost:8081/guestbookMessages

curl http://localhost:8081/guestbookMessages

gcloud sql connect guestbook

use messages
select * from guestbook_message;
